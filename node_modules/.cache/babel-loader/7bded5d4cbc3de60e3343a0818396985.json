{"ast":null,"code":"var _jsxFileName = \"/Users/yangkin/Desktop/project/react/todolist_koa/src/pages/addtodo/index.js\";\nimport React from 'react';\nimport './index.css';\nimport { Form, Input, Button, Checkbox, Affix, message } from 'antd';\nimport reqwest from '../../utils/fetch';\nconst TextArea = Input.TextArea;\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 20\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 10,\n    offset: 6\n  }\n};\n\nclass AddToDOForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatTime = () => {\n      let myDate = new Date();\n      let year = myDate.getFullYear();\n      let month = myDate.getMonth() + 1;\n      let day = myDate.getDate();\n      let hour = myDate.getHours();\n      let min = myDate.getMinutes();\n      let second = myDate.getSeconds();\n      month = month < 10 ? '0' + month : month;\n      day = day < 10 ? '0' + day : day;\n      hour = hour < 10 ? '0' + hour : hour;\n      min = min < 10 ? '0' + min : min;\n      second = second < 10 ? '0' + second : second;\n      let time = year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + second;\n      return time;\n    };\n\n    this.goback = () => {\n      window.history.back(); // 返回\n    };\n\n    this.handleChange = e => {\n      console.log(e.target);\n      this.setState({\n        checkImportant: e.target.checked\n      } // () => {\n      //   this.props.form.validateFields(['nickname'], { force: true });\n      // },\n      );\n    };\n\n    this.normFile = info => {\n      console.log('Upload event:', info); // const { status } = info.file;\n      // if (status !== 'uploading') {\n      //   console.log(info.file, info.fileList);\n      // }\n      // if (status === 'done') {\n      //   message.success(`${info.file.name} file uploaded successfully.`);\n      // } else if (status === 'error') {\n      //   message.error(`${info.file.name} file upload failed.`);\n      // }\n      // if (Array.isArray(e)) {\n      //   return e;\n      // }\n      // return e && e.fileList;\n    };\n\n    this.handleReset = () => {\n      this.props.form.resetFields();\n    };\n\n    this.handleSubmit = e => {\n      let timer = null; // let storage = window.localStorage;\n      // let arr = []\n\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          console.log('error ', err);\n        } else {\n          timer = this.formatTime();\n          let formData = {\n            title: values.title,\n            content: values.content,\n            checkImportant: this.state.checkImportant,\n            time: timer,\n            checked: false\n          };\n          reqwest({\n            url: '/addlist',\n            method: 'POST',\n            data: {\n              formData\n            }\n          }).then(res => {\n            console.log(res); // const hide = message.loading(\"Loading\", 0)\n            //     message.success('Add Success!',() =>{\n            //         // Dismiss manually and asynchronously\n            //         this.props.history.push(\"/home\")\n            //         setTimeout(hide, 1500);\n            //     })\n          }); // if(storage){\n          //   let oldData = JSON.parse(storage.getItem('storageData'))\n          //   let formData = {\n          //     id: Math.floor(Math.random()*10000 +1),\n          //     title:  values.title,\n          //     content: values.content,\n          //     checkImportant: this.state.checkImportant,\n          //     time: timer,\n          //     checked: false\n          //   }\n          //     if(oldData){\n          //       arr.push(...oldData)\n          //     }\n          //     arr.push(formData)\n          //     // console.log(arr)\n          //     storage.setItem('storageData',JSON.stringify(arr))\n          //     const hide = message.loading(\"Loading\", 0)\n          //     message.success('Add Success!',() =>{\n          //         // Dismiss manually and asynchronously\n          //         this.props.history.push(\"/home\")\n          //         setTimeout(hide, 1500);\n          //     })\n          // }\n        }\n      });\n      e.preventDefault();\n    };\n\n    this.state = {\n      checkImportant: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.goback = this.goback.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.formatTime = this.formatTime.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      ref: node => {\n        this.container = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Affix, {\n      className: \"goback\",\n      target: () => this.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      icon: \"left\",\n      onClick: this.goback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"\\u8FD4\\u56DE\")), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"ADD TO-DO List\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Do Not Forget\")), React.createElement(Form, {\n      layout: \"vertical\",\n      className: \"form-content\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"\\u6807\\u9898\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), getFieldDecorator('title', {\n      rules: [{\n        required: true,\n        message: 'Please input your title'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Please input your title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"\\u5185\\u5BB9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), getFieldDecorator('content', {\n      rules: [{\n        required: true,\n        message: 'Please input your plan'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 6,\n      placeholder: \"Please input your plan\",\n      autoSize: {\n        minRows: 6,\n        maxRows: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Dragger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, getFieldDecorator('dragger', {\n      valuePropName: 'fileList',\n      getValueFromEvent: this.normFile\n    })(React.createElement(Upload.Dragger, {\n      name: \"files\",\n      action: \"/upload.do\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n      className: \"ant-upload-hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Support for a single or bulk upload.\")))), React.createElement(Form.Item, Object.assign({}, formTailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      checked: this.state.checkImportant,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"\\u8BBE\\u7F6E\\u4E3A\\u91CD\\u8981\\u4E8B\\u9879\\uFF1F\")), React.createElement(Form.Item, Object.assign({}, formTailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"\\u6E05\\u7A7A\"), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginLeft: 80\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"\\u5B8C\\u6210\"))));\n  }\n\n}\n\nconst AddToDO = Form.create({\n  name: 'dynamic_rule'\n})(AddToDOForm);\nexport default AddToDO;","map":{"version":3,"sources":["/Users/yangkin/Desktop/project/react/todolist_koa/src/pages/addtodo/index.js"],"names":["React","Form","Input","Button","Checkbox","Affix","message","reqwest","TextArea","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","AddToDOForm","Component","constructor","props","formatTime","myDate","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","min","getMinutes","second","getSeconds","time","goback","window","history","back","handleChange","e","console","log","target","setState","checkImportant","checked","normFile","info","handleReset","form","resetFields","handleSubmit","timer","validateFieldsAndScroll","err","values","formData","title","content","state","url","method","data","then","res","preventDefault","bind","componentDidMount","render","getFieldDecorator","node","container","rules","required","minRows","maxRows","valuePropName","getValueFromEvent","marginLeft","AddToDO","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './index.css'\nimport { Form, Input, Button, Checkbox, Affix, message} from 'antd';\nimport reqwest from '../../utils/fetch'\nconst { TextArea } = Input;\n\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 10, offset: 6 },\n};\n\nclass AddToDOForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n      checkImportant: false,\n    };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.goback = this.goback.bind(this);\n   \n      this.handleReset = this.handleReset.bind(this);\n      this.formatTime = this.formatTime.bind(this);\n  }\n  componentDidMount() {\n  \n   \n  };\n\n  formatTime = () => {\n    let myDate = new Date()\n   \n    let year = myDate.getFullYear()\n    let month = myDate.getMonth() + 1\n    let day = myDate.getDate()\n    let hour = myDate.getHours()\n    let min = myDate.getMinutes()\n    let second = myDate.getSeconds()\n    month = month < 10 ? ('0' + month) : month\n    day = day < 10 ? ('0' + day) : day\n\n    hour = hour < 10 ? ('0' + hour) : hour\n    min = min < 10 ? ('0' + min) : min\n    second = second < 10 ? ('0' + second) : second\n  \n    let time = year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + second\n    return time\n  };\n  goback = () => {\n    window.history.back(); // 返回\n  };\n  handleChange = e => {\n    console.log(e.target)\n    this.setState(\n      { \n        checkImportant: e.target.checked,\n      },\n      // () => {\n      //   this.props.form.validateFields(['nickname'], { force: true });\n      // },\n    );\n  };\n  normFile = (info)=> {\n    console.log('Upload event:', info);\n    // const { status } = info.file;\n    // if (status !== 'uploading') {\n    //   console.log(info.file, info.fileList);\n    // }\n    // if (status === 'done') {\n    //   message.success(`${info.file.name} file uploaded successfully.`);\n    // } else if (status === 'error') {\n    //   message.error(`${info.file.name} file upload failed.`);\n    // }\n  \n    // if (Array.isArray(e)) {\n    //   return e;\n    // }\n    // return e && e.fileList;\n  };\n  handleReset = () => {\n    this.props.form.resetFields();\n  };\n\n  handleSubmit = e => {\n    let timer = null\n    // let storage = window.localStorage;\n    // let arr = []\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (err) {\n        console.log('error ', err);\n      }else {\n        timer = this.formatTime()\n        let formData = {\n              title:  values.title,\n              content: values.content,\n              checkImportant: this.state.checkImportant,\n              time: timer,\n              checked: false\n            }\n        reqwest({\n          url: '/addlist',\n          method: 'POST',\n          data:{\n            formData\n          }\n        }).then(res => {\n          console.log(res)\n          // const hide = message.loading(\"Loading\", 0)\n          //     message.success('Add Success!',() =>{\n          //         // Dismiss manually and asynchronously\n          //         this.props.history.push(\"/home\")\n          //         setTimeout(hide, 1500);\n          //     })\n        });\n        // if(storage){\n        //   let oldData = JSON.parse(storage.getItem('storageData'))\n        //   let formData = {\n        //     id: Math.floor(Math.random()*10000 +1),\n        //     title:  values.title,\n        //     content: values.content,\n        //     checkImportant: this.state.checkImportant,\n        //     time: timer,\n        //     checked: false\n        //   }\n        //     if(oldData){\n        //       arr.push(...oldData)\n        //     }\n        //     arr.push(formData)\n        //     // console.log(arr)\n        //     storage.setItem('storageData',JSON.stringify(arr))\n        //     const hide = message.loading(\"Loading\", 0)\n        //     message.success('Add Success!',() =>{\n        //         // Dismiss manually and asynchronously\n        //         this.props.history.push(\"/home\")\n        //         setTimeout(hide, 1500);\n        //     })\n        // }\n      }\n    });\n    e.preventDefault();\n  };\n \n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"form-container\" ref={node => {\n        this.container = node;\n      }}>\n        <Affix className=\"goback\"  target={() => this.container} >\n          <Button type=\"primary\" icon=\"left\" onClick={this.goback}>返回</Button>\n        </Affix>\n       <header>\n          <h1>ADD TO-DO List</h1>\n          <p>Do Not Forget</p>\n        </header>\n        <Form layout=\"vertical\" className=\"form-content\" onSubmit={this.handleSubmit} >\n          <Form.Item {...formItemLayout} label=\"标题\">\n            {getFieldDecorator('title', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your title',\n                },\n              ],\n            })(<Input  placeholder=\"Please input your title\" />)}\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"内容\">\n            {getFieldDecorator('content', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your plan',\n                },\n              ],\n            })(<TextArea rows={6} placeholder=\"Please input your plan\" \n                autoSize={{ minRows: 6, maxRows: 15 }}\n            />)}\n          </Form.Item>\n          <Form.Item label=\"Dragger\">\n          {getFieldDecorator('dragger', {\n            valuePropName: 'fileList',\n            getValueFromEvent: this.normFile,\n          })(\n            <Upload.Dragger name=\"files\" action=\"/upload.do\">\n              <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n              </p>\n              <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n              <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n            </Upload.Dragger>,\n          )}\n        </Form.Item>\n          <Form.Item {...formTailLayout}>\n            <Checkbox checked={this.state.checkImportant} onChange={this.handleChange}>\n              设置为重要事项？\n            </Checkbox>\n          </Form.Item>\n          <Form.Item {...formTailLayout}>\n            <Button onClick={this.handleReset}>\n              清空\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: 80 }} >\n              完成\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst AddToDO = Form.create({ name: 'dynamic_rule' })(AddToDOForm);\n\n\n  export default AddToDO;"]},"metadata":{},"sourceType":"module"}