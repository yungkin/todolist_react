{"ast":null,"code":"import _defineProperty from \"/Users/yangkin/Desktop/project/react/todolist_koa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst commonUrl = 'http://127.0.0.1:3100'; // localStorage.setItem(\"access_token\",\"test\")\n\nfunction parseJSON(resp, req) {\n  return resp.json();\n} //格式化url查询参数为json\n\n\nfunction formatUrl(url) {\n  var reg = /(?:[?&]+)([^&]+)=([^&]+)/g;\n  var data = {};\n\n  function fn(str, pro, value) {\n    data[decodeURIComponent(pro)] = decodeURIComponent(value);\n  }\n\n  url.replace(reg, fn);\n  console.log(data);\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 500) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n/**\n * 登录请求\n * \n * @param data 数据\n */\n\n\nexport function loginReq(data) {\n  const options = {};\n  options.method = 'post';\n  options.made = 'cors';\n  options.body = JSON.stringify(data);\n  options.headers = {\n    'Content-Type': 'application/json'\n  };\n  return fetch('/loginOk', options, {\n    credentials: 'include'\n  }).then(checkStatus).then(parseJSON).then(res => {\n    if (res.retCode === '0001') {\n      localStorage.setItem('x-access-token', res.retBody.AccessToken);\n      return 'success';\n    } else if (res.retCode === '0002') {\n      return 'error';\n    } else if (res.retCode === '0003') {\n      return 'error';\n    } else {\n      return;\n    }\n  }).catch(err => ({\n    err\n  }));\n}\n/**\n * 普通请求\n * @param {*url,*method,*data} options \n */\n\nexport default function reqwest(options = {}) {\n  // const Authorization = localStorage.getItem('access_token')\n  const _options = options,\n        data = _options.data,\n        url = _options.url;\n  options = _objectSpread({}, options);\n  options.mode = 'cors';\n  delete options.url; // let methods = options.method.toLowerCase() \n  // options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE'\n\n  if (options.method) {\n    // 对非get类请求头和请求体做处理\n    if (data) {\n      delete options.data;\n      options.body = JSON.stringify({\n        data\n      }); // options.headers={\n      //   // 'Authorization':Authorization,\n      //   'Accept': 'application/json, text/plain, */*',\n      //   'Content-Type': 'application/x-www-form-urlencoded'\n      //   'Content-Type':'application/json;charset=UTF-8' \n      // }\n    }\n  } // else if(options.method === 'GET'){\n  //   console.log('get',url)\n  //   // 格式化get请求的数据(fetch的get请求需要需要将参数拼接到url后面)\n  //   if(param){\n  //     delete options.param\n  //       // let mydata = formatUrl(param)\n  //       // options.headers={\n  //       //   'Accept': 'application/json, text/plain, */*',\n  //       //   'Content-Type':'application/json;charset=UTF-8' \n  //       // }\n  //   }\n  // }\n\n\n  return fetch(commonUrl + url, options, {\n    credentials: 'include'\n  }).then(checkStatus).then(parseJSON).catch(err => ({\n    err\n  }));\n} // import React from 'react'\n// import request from './helper.js'\n// class RequestDemo extends React.Component{\n//   componentDidMount(){\n//     request({\n//       url:'/posttest',\n//       method:'post',\n//       data:{\"Header\":{\"AccessToken\":\"eyJ0eXBlIjoiSldUIiwiYWxnIjoiSFM1MTIifQ.eyJzdWIiOiIxMDYiLCJleHBpciI6MTUxMDczODAzNjA5MiwiaXNzIjoiIn0.eo000vRNb_zQOibg_ndhlWbi27hPt3KaDwVk7lQiS5NJ4GS4esaaXxfoCbRc7-hjlyQ8tY_NZ24BTVLwUEoXlA\"},\"Body\":{}}\n//     }).then(function(res){\n//       console.log(res)\n//     })\n//   }\n//   render(){\n//     return (\n//       <div>\n//     test\n//       </div>\n//     )\n//   }\n// }\n// export default RequestDemo","map":{"version":3,"sources":["/Users/yangkin/Desktop/project/react/todolist_koa/src/utils/fetch.js"],"names":["commonUrl","parseJSON","resp","req","json","formatUrl","url","reg","data","fn","str","pro","value","decodeURIComponent","replace","console","log","checkStatus","response","status","error","Error","statusText","loginReq","options","method","made","body","JSON","stringify","headers","fetch","credentials","then","res","retCode","localStorage","setItem","retBody","AccessToken","catch","err","reqwest","mode"],"mappings":"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","sourcesContent":["const commonUrl = 'http://127.0.0.1:3100'\n// localStorage.setItem(\"access_token\",\"test\")\n\nfunction parseJSON(resp,req){\n  return resp.json()\n}\n//格式化url查询参数为json\nfunction formatUrl(url){ \n  var reg=/(?:[?&]+)([^&]+)=([^&]+)/g; \n  var data={}; \n  function fn(str,pro,value){ \n      data[decodeURIComponent(pro)]=decodeURIComponent(value); \n  } \n  url.replace(reg,fn); \n  console.log(data)\n  return data; \n} \n\nfunction checkStatus(response){\n  if(response.status >= 200 && response.status < 500){\n    return response\n  }\n  const error = new Error(response.statusText)\n  error.response = response\n  throw error\n}\n  \n  /**\n   * 登录请求\n   * \n   * @param data 数据\n   */\n  export function loginReq(data){ \n    const options = {}\n    options.method = 'post'\n    options.made = 'cors'\n    options.body = JSON.stringify(data)\n    options.headers={\n      'Content-Type':'application/json'\n    }\n    return fetch('/loginOk',options,{credentials:'include'})\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((res)=>{\n        if(res.retCode === '0001'){\n          localStorage.setItem('x-access-token',res.retBody.AccessToken)\n          return 'success'\n        }\n        else if(res.retCode === '0002'){\n          return 'error'\n        }\n        else if(res.retCode === '0003'){\n          return 'error'\n        }else{\n          return ;\n        }\n        \n      })\n      .catch(err=>({err}))\n  }\n  \n  /**\n   * 普通请求\n   * @param {*url,*method,*data} options \n   */\n \nexport default function reqwest(options = {}){\n  // const Authorization = localStorage.getItem('access_token')\n  const {data,url} = options\n  options = {...options}\n  options.mode = 'cors'\n  delete options.url\n \n  // let methods = options.method.toLowerCase() \n  // options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE'\n  if(options.method ) {\n      // 对非get类请求头和请求体做处理\n      if (data) {\n        delete options.data\n       \n        options.body = JSON.stringify({\n          data\n        })\n        // options.headers={\n         \n        //   // 'Authorization':Authorization,\n        //   'Accept': 'application/json, text/plain, */*',\n        //   'Content-Type': 'application/x-www-form-urlencoded'\n        //   'Content-Type':'application/json;charset=UTF-8' \n        // }\n      \n      }\n  }\n  // else if(options.method === 'GET'){\n  //   console.log('get',url)\n  //   // 格式化get请求的数据(fetch的get请求需要需要将参数拼接到url后面)\n  //   if(param){\n  //     delete options.param\n  //       // let mydata = formatUrl(param)\n  //       // options.headers={\n  //       //   'Accept': 'application/json, text/plain, */*',\n  //       //   'Content-Type':'application/json;charset=UTF-8' \n  //       // }\n  //   }\n    \n    \n  // }\n \n  return fetch(commonUrl + url,options,{credentials: 'include'})\n    .then(checkStatus)\n    .then(parseJSON)\n    .catch(err=>({err}))\n}\n\n// import React from 'react'\n// import request from './helper.js'\n// class RequestDemo extends React.Component{\n//   componentDidMount(){\n//     request({\n//       url:'/posttest',\n//       method:'post',\n//       data:{\"Header\":{\"AccessToken\":\"eyJ0eXBlIjoiSldUIiwiYWxnIjoiSFM1MTIifQ.eyJzdWIiOiIxMDYiLCJleHBpciI6MTUxMDczODAzNjA5MiwiaXNzIjoiIn0.eo000vRNb_zQOibg_ndhlWbi27hPt3KaDwVk7lQiS5NJ4GS4esaaXxfoCbRc7-hjlyQ8tY_NZ24BTVLwUEoXlA\"},\"Body\":{}}\n//     }).then(function(res){\n//       console.log(res)\n//     })\n//   }\n//   render(){\n//     return (\n//       <div>\n//     test\n//       </div>\n//     )\n//   }\n// }\n// export default RequestDemo"]},"metadata":{},"sourceType":"module"}