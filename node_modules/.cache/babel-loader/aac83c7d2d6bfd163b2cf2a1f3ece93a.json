{"ast":null,"code":"import _defineProperty from \"/Users/yangkin/Desktop/project/react/todolist_koa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst commonUrl = 'http://127.0.0.1:3100';\nlocalStorage.setItem(\"access_token\", \"test\");\n\nfunction parseJSON(response) {\n  return response.json();\n} //格式化url查询参数为json\n\n\nfunction formatUrl(url) {\n  var reg = /(?:[?&]+)([^&]+)=([^&]+)/g;\n  var data = {};\n\n  function fn(str, pro, value) {\n    data[decodeURIComponent(pro)] = decodeURIComponent(value);\n  }\n\n  url.replace(reg, fn);\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 500) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n/**\n * 登录请求\n * \n * @param data 数据\n */\n\n\nexport function loginReq(data) {\n  const options = {};\n  options.method = 'post';\n  options.made = 'cors';\n  options.body = JSON.stringify(data);\n  options.headers = {\n    'Content-Type': 'application/json'\n  };\n  return fetch('/loginOk', options, {\n    credentials: 'include'\n  }).then(checkStatus).then(parseJSON).then(res => {\n    if (res.retCode === '0001') {\n      localStorage.setItem('x-access-token', res.retBody.AccessToken);\n      return 'success';\n    } else if (res.retCode === '0002') {\n      return 'error';\n    } else if (res.retCode === '0003') {\n      return 'error';\n    } else {\n      return;\n    }\n  }).catch(err => ({\n    err\n  }));\n}\n/**\n * 普通请求\n * @param {*url,*method,*data} options \n */\n\nexport default function reqwest(options = {}) {\n  // const Authorization = localStorage.getItem('access_token')\n  let finaleURl = '';\n  const _options = options,\n        data = _options.data,\n        url = _options.url;\n  options = _objectSpread({}, options);\n  options.mode = 'cors';\n  delete options.url;\n\n  if (data) {\n    // 格式化get请求的数据(fetch的get请求需要需要将参数拼接到url后面)\n    if (options.method === 'get') {\n      finaleURl = commonUrl + url;\n\n      if (options.data) {\n        finaleURl = commonUrl + url + formatUrl(JSON.stringify({\n          data\n        }));\n      }\n    } // 对非get类请求头和请求体做处理\n\n\n    if (options.method === 'post' || options.method === 'put' || options.method === 'delete') {\n      options.headers = {\n        // 'Authorization':Authorization,\n        // 'Accept': 'application/json, text/plain, */*',\n        'Content-Type': options.headers['Content-Type'] || 'application/json;charset=UTF-8' // 'Content-Type': 'application/x-www-form-urlencoded'\n\n      };\n      options.body = JSON.stringify({\n        data\n      });\n      finaleURl = commonUrl + url;\n    }\n\n    delete options.data;\n  }\n\n  return fetch(finaleURl, options, {\n    credentials: 'include'\n  }).then(checkStatus).then(parseJSON).catch(err => ({\n    err\n  }));\n} // import React from 'react'\n// import request from './helper.js'\n// class RequestDemo extends React.Component{\n//   componentDidMount(){\n//     request({\n//       url:'/posttest',\n//       method:'post',\n//       data:{\"Header\":{\"AccessToken\":\"eyJ0eXBlIjoiSldUIiwiYWxnIjoiSFM1MTIifQ.eyJzdWIiOiIxMDYiLCJleHBpciI6MTUxMDczODAzNjA5MiwiaXNzIjoiIn0.eo000vRNb_zQOibg_ndhlWbi27hPt3KaDwVk7lQiS5NJ4GS4esaaXxfoCbRc7-hjlyQ8tY_NZ24BTVLwUEoXlA\"},\"Body\":{}}\n//     }).then(function(res){\n//       console.log(res)\n//     })\n//   }\n//   render(){\n//     return (\n//       <div>\n//     test\n//       </div>\n//     )\n//   }\n// }\n// export default RequestDemo","map":{"version":3,"sources":["/Users/yangkin/Desktop/project/react/todolist_koa/src/utils/fetch.js"],"names":["commonUrl","localStorage","setItem","parseJSON","response","json","formatUrl","url","reg","data","fn","str","pro","value","decodeURIComponent","replace","checkStatus","status","error","Error","statusText","loginReq","options","method","made","body","JSON","stringify","headers","fetch","credentials","then","res","retCode","retBody","AccessToken","catch","err","reqwest","finaleURl","mode"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG,uBAAlB;AACAC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAoC,MAApC;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA4B;AAC1B,SAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,C,CACD;;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;AACrB,MAAIC,GAAG,GAAC,2BAAR;AACA,MAAIC,IAAI,GAAC,EAAT;;AACA,WAASC,EAAT,CAAYC,GAAZ,EAAgBC,GAAhB,EAAoBC,KAApB,EAA0B;AACtBJ,IAAAA,IAAI,CAACK,kBAAkB,CAACF,GAAD,CAAnB,CAAJ,GAA8BE,kBAAkB,CAACD,KAAD,CAAhD;AACH;;AACDN,EAAAA,GAAG,CAACQ,OAAJ,CAAYP,GAAZ,EAAgBE,EAAhB;AACA,SAAOD,IAAP;AACD;;AAED,SAASO,WAAT,CAAqBZ,QAArB,EAA8B;AAC5B,MAAGA,QAAQ,CAACa,MAAT,IAAmB,GAAnB,IAA0Bb,QAAQ,CAACa,MAAT,GAAkB,GAA/C,EAAmD;AACjD,WAAOb,QAAP;AACD;;AACD,QAAMc,KAAK,GAAG,IAAIC,KAAJ,CAAUf,QAAQ,CAACgB,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACd,QAAN,GAAiBA,QAAjB;AACA,QAAMc,KAAN;AACD;AAEC;;;;;;;AAKA,OAAO,SAASG,QAAT,CAAkBZ,IAAlB,EAAuB;AAC5B,QAAMa,OAAO,GAAG,EAAhB;AACAA,EAAAA,OAAO,CAACC,MAAR,GAAiB,MAAjB;AACAD,EAAAA,OAAO,CAACE,IAAR,GAAe,MAAf;AACAF,EAAAA,OAAO,CAACG,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAelB,IAAf,CAAf;AACAa,EAAAA,OAAO,CAACM,OAAR,GAAgB;AACd,oBAAe;AADD,GAAhB;AAGA,SAAOC,KAAK,CAAC,UAAD,EAAYP,OAAZ,EAAoB;AAACQ,IAAAA,WAAW,EAAC;AAAb,GAApB,CAAL,CACJC,IADI,CACCf,WADD,EAEJe,IAFI,CAEC5B,SAFD,EAGJ4B,IAHI,CAGEC,GAAD,IAAO;AACX,QAAGA,GAAG,CAACC,OAAJ,KAAgB,MAAnB,EAA0B;AACxBhC,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAsC8B,GAAG,CAACE,OAAJ,CAAYC,WAAlD;AACA,aAAO,SAAP;AACD,KAHD,MAIK,IAAGH,GAAG,CAACC,OAAJ,KAAgB,MAAnB,EAA0B;AAC7B,aAAO,OAAP;AACD,KAFI,MAGA,IAAGD,GAAG,CAACC,OAAJ,KAAgB,MAAnB,EAA0B;AAC7B,aAAO,OAAP;AACD,KAFI,MAEA;AACH;AACD;AAEF,GAjBI,EAkBJG,KAlBI,CAkBEC,GAAG,KAAG;AAACA,IAAAA;AAAD,GAAH,CAlBL,CAAP;AAmBD;AAED;;;;;AAKF,eAAe,SAASC,OAAT,CAAiBhB,OAAO,GAAG,EAA3B,EAA8B;AAC3C;AACA,MAAIiB,SAAS,GAAG,EAAhB;AAF2C,mBAGxBjB,OAHwB;AAAA,QAGpCb,IAHoC,YAGpCA,IAHoC;AAAA,QAG/BF,GAH+B,YAG/BA,GAH+B;AAI3Ce,EAAAA,OAAO,qBAAOA,OAAP,CAAP;AACAA,EAAAA,OAAO,CAACkB,IAAR,GAAe,MAAf;AACA,SAAOlB,OAAO,CAACf,GAAf;;AACA,MAAGE,IAAH,EAAQ;AACN;AACF,QAAIa,OAAO,CAACC,MAAR,KAAmB,KAAvB,EAA8B;AAC5BgB,MAAAA,SAAS,GAAGvC,SAAS,GAAGO,GAAxB;;AACA,UAAGe,OAAO,CAACb,IAAX,EAAgB;AAEd8B,QAAAA,SAAS,GAAGvC,SAAS,GAAGO,GAAZ,GAAkBD,SAAS,CAACoB,IAAI,CAACC,SAAL,CAAe;AACrDlB,UAAAA;AADqD,SAAf,CAAD,CAAvC;AAGD;AAEF,KAXO,CAYL;;;AACH,QAAIa,OAAO,CAACC,MAAR,KAAmB,MAAnB,IAA6BD,OAAO,CAACC,MAAR,KAAmB,KAAhD,IAAyDD,OAAO,CAACC,MAAR,KAAmB,QAAhF,EAA0F;AACxFD,MAAAA,OAAO,CAACM,OAAR,GAAgB;AACd;AACA;AACA,wBAAeN,OAAO,CAACM,OAAR,CAAgB,cAAhB,KAAoC,gCAHrC,CAId;;AAJc,OAAhB;AAMAN,MAAAA,OAAO,CAACG,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAe;AAC5BlB,QAAAA;AAD4B,OAAf,CAAf;AAGA8B,MAAAA,SAAS,GAAEvC,SAAS,GAAGO,GAAvB;AACD;;AACC,WAAOe,OAAO,CAACb,IAAf;AAED;;AAGD,SAAOoB,KAAK,CAACU,SAAD,EAAWjB,OAAX,EAAmB;AAACQ,IAAAA,WAAW,EAAE;AAAd,GAAnB,CAAL,CACJC,IADI,CACCf,WADD,EAEJe,IAFI,CAEC5B,SAFD,EAGJiC,KAHI,CAGEC,GAAG,KAAG;AAACA,IAAAA;AAAD,GAAH,CAHL,CAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const commonUrl = 'http://127.0.0.1:3100'\nlocalStorage.setItem(\"access_token\",\"test\")\n\nfunction parseJSON(response){\n  return response.json()\n}\n//格式化url查询参数为json\nfunction formatUrl(url){ \n  var reg=/(?:[?&]+)([^&]+)=([^&]+)/g; \n  var data={}; \n  function fn(str,pro,value){ \n      data[decodeURIComponent(pro)]=decodeURIComponent(value); \n  } \n  url.replace(reg,fn); \n  return data; \n} \n\nfunction checkStatus(response){\n  if(response.status >= 200 && response.status < 500){\n    return response\n  }\n  const error = new Error(response.statusText)\n  error.response = response\n  throw error\n}\n  \n  /**\n   * 登录请求\n   * \n   * @param data 数据\n   */\n  export function loginReq(data){ \n    const options = {}\n    options.method = 'post'\n    options.made = 'cors'\n    options.body = JSON.stringify(data)\n    options.headers={\n      'Content-Type':'application/json'\n    }\n    return fetch('/loginOk',options,{credentials:'include'})\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((res)=>{\n        if(res.retCode === '0001'){\n          localStorage.setItem('x-access-token',res.retBody.AccessToken)\n          return 'success'\n        }\n        else if(res.retCode === '0002'){\n          return 'error'\n        }\n        else if(res.retCode === '0003'){\n          return 'error'\n        }else{\n          return ;\n        }\n        \n      })\n      .catch(err=>({err}))\n  }\n  \n  /**\n   * 普通请求\n   * @param {*url,*method,*data} options \n   */\n \nexport default function reqwest(options = {}){\n  // const Authorization = localStorage.getItem('access_token')\n  let finaleURl = ''\n  const {data,url} = options\n  options = {...options}\n  options.mode = 'cors'\n  delete options.url\n  if(data){\n    // 格式化get请求的数据(fetch的get请求需要需要将参数拼接到url后面)\n  if (options.method === 'get') {\n    finaleURl = commonUrl + url\n    if(options.data){\n    \n      finaleURl = commonUrl + url + formatUrl(JSON.stringify({\n        data\n      }))\n    }\n      \n  }\n     // 对非get类请求头和请求体做处理\n  if (options.method === 'post' || options.method === 'put' || options.method === 'delete') {\n    options.headers={\n      // 'Authorization':Authorization,\n      // 'Accept': 'application/json, text/plain, */*',\n      'Content-Type':options.headers['Content-Type'] ||  'application/json;charset=UTF-8' \n      // 'Content-Type': 'application/x-www-form-urlencoded'\n    }\n    options.body = JSON.stringify({\n      data\n    })\n    finaleURl= commonUrl + url\n  }\n    delete options.data\n    \n  }\n \n\n  return fetch(finaleURl,options,{credentials: 'include'})\n    .then(checkStatus)\n    .then(parseJSON)\n    .catch(err=>({err}))\n}\n\n// import React from 'react'\n// import request from './helper.js'\n// class RequestDemo extends React.Component{\n//   componentDidMount(){\n//     request({\n//       url:'/posttest',\n//       method:'post',\n//       data:{\"Header\":{\"AccessToken\":\"eyJ0eXBlIjoiSldUIiwiYWxnIjoiSFM1MTIifQ.eyJzdWIiOiIxMDYiLCJleHBpciI6MTUxMDczODAzNjA5MiwiaXNzIjoiIn0.eo000vRNb_zQOibg_ndhlWbi27hPt3KaDwVk7lQiS5NJ4GS4esaaXxfoCbRc7-hjlyQ8tY_NZ24BTVLwUEoXlA\"},\"Body\":{}}\n//     }).then(function(res){\n//       console.log(res)\n//     })\n//   }\n//   render(){\n//     return (\n//       <div>\n//     test\n//       </div>\n//     )\n//   }\n// }\n// export default RequestDemo"]},"metadata":{},"sourceType":"module"}