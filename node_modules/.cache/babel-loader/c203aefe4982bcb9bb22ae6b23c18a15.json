{"ast":null,"code":"var _jsxFileName = \"/Users/yangkin/Desktop/project/react/todolist_koa/src/pages/todoList/index.js\";\nimport React from 'react';\nimport './todoList.css';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { List, message, Modal, Spin, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport reqwest from '../../utils/fetch';\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = callback => {\n      reqwest({\n        url: '/todolist',\n        method: 'get',\n        data: {}\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.handleInfiniteOnLoad = () => {\n      let data = this.state.data;\n      this.setState({\n        loading: true\n      });\n\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n        this.setState({\n          hasMore: false,\n          loading: false\n        });\n        return;\n      }\n\n      this.fetchData(res => {\n        data = data.concat(res.results);\n        this.setState({\n          data,\n          loading: false\n        });\n      });\n    };\n\n    this.showModal = id => {\n      let formData = this.state.data;\n      let editData = {\n        title: '',\n        content: '',\n        checkImportant: false,\n        time: null,\n        checked: false\n      };\n      formData.map(item => {\n        if (item.id == id) {\n          editData.title = item.title;\n          editData.content = item.content;\n          editData.checkImportant = item.checkImportant;\n          editData.time = item.time;\n          editData.checked = item.checked;\n        }\n      });\n      this.setState({\n        visible: true,\n        title: editData.title,\n        content: editData.content,\n        id: id,\n        timer: editData.time,\n        checkImportant: editData.checkImportant,\n        checked: editData.checked\n      });\n    };\n\n    this.handleSubmit = e => {\n      let arr = [];\n      let oldData = JSON.parse(window.localStorage.getItem('storageData'));\n      let formData = {\n        id: this.state.id,\n        title: this.state.title,\n        content: this.state.content,\n        checkImportant: this.state.checkImportant,\n        time: this.state.timer,\n        checked: this.state.checked\n      };\n      this.setState({\n        visible: false\n      });\n\n      if (oldData) {\n        arr.push(...oldData);\n      }\n\n      arr.push(formData);\n      window.localStorage.setItem('storageData', JSON.stringify(arr));\n      e.preventDefault();\n    };\n\n    this.handleCancel = e => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.deleteData = index => {\n      // console.log(index)\n      let formList = this.state.data;\n      formList.splice(index, 1);\n      this.setState({\n        data: formList\n      });\n      window.localStorage.setItem('storageData', JSON.stringify(formList));\n    };\n\n    this.state = {\n      data: [],\n      loading: false,\n      hasMore: true,\n      visible: false,\n      id: 0,\n      title: '',\n      content: '',\n      timer: null,\n      checkImportant: false,\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData(); // let storage = window.localStorage\n    // let oldData = JSON.parse(storage.getItem('storageData'))\n    // if(oldData) {\n    //   this.setState({\n    //       data: oldData,\n    //     });\n    // }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    console.log(value);\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const visible = this.state.visible;\n    return React.createElement(\"div\", {\n      className: \"demo-infinite-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addToDo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      icon: \"diff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      loadMore: this.handleInfiniteOnLoad,\n      hasMore: !this.state.loading && this.state.hasMore,\n      useWindow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(List, {\n      dataSource: this.state.data,\n      renderItem: (item, index) => {\n        if (item.checked == false) {\n          return React.createElement(List.Item, {\n            key: item.id,\n            actions: [React.createElement(\"a\", {\n              key: \"list-loadmore-edit\",\n              onClick: this.showModal.bind(this, item.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(\"a\", {\n              key: \"list-loadmore-delete\",\n              onClick: this.deleteData.bind(this, index),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            }, \"Delete\")],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            title: item.title,\n            description: item.time,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, item.content), React.createElement(Modal, {\n            visible: visible,\n            centered: true,\n            footer: null,\n            width: 680,\n            onCancel: this.handleCancel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            onSubmit: this.handleSubmit,\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, \"\\u6807\\u9898\\uFF1A\", React.createElement(\"input\", {\n            value: this.state.title,\n            name: \"title\",\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, \"  \\u5185\\u5BB9:\"), React.createElement(\"textarea\", {\n            value: this.state.content,\n            name: \"content\",\n            onChange: this.handleChange,\n            rows: \"8\",\n            cols: \"46\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"checked\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            name: \"checked\",\n            type: \"checkbox\",\n            checked: this.state.checked,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }), \"\\u8BBE\\u7F6E\\u4E3A\\u5DF2\\u5B8C\\u6210\\u4E8B\\u9879\\uFF1F\"), React.createElement(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              marginTop: 30\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, \"\\u5B8C\\u6210\")))));\n        } else {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.loading && this.state.hasMore && React.createElement(\"div\", {\n      className: \"demo-loading-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/yangkin/Desktop/project/react/todolist_koa/src/pages/todoList/index.js"],"names":["React","InfiniteScroll","List","message","Modal","Spin","Button","Link","reqwest","ToDoList","Component","constructor","props","fetchData","callback","url","method","data","then","res","console","log","handleInfiniteOnLoad","state","setState","loading","length","warning","hasMore","concat","results","showModal","id","formData","editData","title","content","checkImportant","time","checked","map","item","visible","timer","handleSubmit","e","arr","oldData","JSON","parse","window","localStorage","getItem","push","setItem","stringify","preventDefault","handleCancel","deleteData","index","formList","splice","handleChange","bind","componentDidMount","event","target","value","type","name","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './todoList.css';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { List, message, Modal, Spin, Button} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport reqwest from '../../utils/fetch'\n\nclass ToDoList extends React.Component {\n  \n   constructor(props) {\n     super(props);\n     this.state = {\n      data: [],\n      loading: false,\n      hasMore: true,\n      visible: false,\n      id:0,\n      title: '',\n      content: '',\n      timer: null,\n      checkImportant: false,\n      checked: false\n      \n    };\n    this.handleChange = this.handleChange.bind(this);\n   };\n  \n    componentDidMount() {\n      this.fetchData()\n      // let storage = window.localStorage\n      // let oldData = JSON.parse(storage.getItem('storageData'))\n        \n        // if(oldData) {\n        //   this.setState({\n        //       data: oldData,\n        //     });\n        // }\n       \n      };\n      \n      fetchData = callback => {\n        reqwest({\n          url: '/todolist',\n          method: 'get',\n          data:{}\n        }).then(res => {\n            console.log(res)\n        });\n      };\n    \n      handleInfiniteOnLoad = () => {\n        let { data } = this.state;\n        this.setState({\n          loading: true,\n        });\n        if (data.length > 14) {\n          message.warning('Infinite List loaded all');\n          this.setState({\n            hasMore: false,\n            loading: false,\n          });\n          return;\n        }\n        this.fetchData(res => {\n          data = data.concat(res.results);\n          this.setState({\n            data,\n            loading: false,\n          });\n        });\n      };\n      showModal = (id) => {\n        let formData = this.state.data;\n        let editData = {\n            title: '',\n            content: '',\n            checkImportant:false,\n            time:null,\n            checked:false\n\n        }\n        formData.map( item => {\n          if(item.id == id){\n              editData.title = item.title\n              editData.content = item.content\n              editData.checkImportant = item.checkImportant\n              editData.time = item.time\n              editData.checked = item.checked\n          }\n          \n        })\n        this.setState({\n          visible: true,\n          title: editData.title,\n          content: editData.content,\n          id: id,\n          timer:editData.time,\n          checkImportant: editData.checkImportant,\n          checked: editData.checked\n        });\n      };\n      handleChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        console.log(value)\n        this.setState({\n          [name]: value\n        });\n      };\n      handleSubmit = (e) => {\n        let arr = []\n        let oldData = JSON.parse( window.localStorage.getItem('storageData'))\n        let formData = {\n          id: this.state.id,\n          title:  this.state.title,\n          content: this.state.content,\n          checkImportant: this.state.checkImportant,\n          time: this.state.timer,\n          checked:this.state.checked\n          \n        }\n         \n          this.setState({\n            visible: false\n          })\n          if(oldData){\n            arr.push(...oldData)\n          }\n          arr.push(formData)\n          window.localStorage.setItem('storageData',JSON.stringify(arr))\n          e.preventDefault();\n      };\n      handleCancel = e => {\n        this.setState({\n          visible: false,\n        });\n      };\n     \n      deleteData=(index)=>{\n        // console.log(index)\n        let formList  = this.state.data\n        formList.splice(index,1)\n        this.setState({\n          data: formList\n        })\n        \n        window.localStorage.setItem('storageData',JSON.stringify(formList));\n\n      };\n      render() {\n        const { visible} = this.state;\n      \n        return (\n         \n          <div className=\"demo-infinite-container\">\n            <div className=\"addBtn\">\n              <Link to='/addToDo'>\n                  <Button type=\"primary\" icon=\"diff\">\n                    Add\n                  </Button>\n              </Link>\n              \n            </div>\n            <hr />\n            <InfiniteScroll\n              initialLoad={false}\n              pageStart={0}\n              loadMore={this.handleInfiniteOnLoad}\n              hasMore={!this.state.loading && this.state.hasMore}\n              useWindow={false}\n            >\n              <List\n                dataSource={this.state.data}\n                renderItem={(item,index)=> {\n                  if(item.checked == false) {\n                    return (\n                      <List.Item key={item.id}\n                      actions={[<a key=\"list-loadmore-edit\" \n                      onClick={this.showModal.bind(this,item.id)}>Edit</a>, \n                      <a key=\"list-loadmore-delete\" \n                      onClick={this.deleteData.bind(this,index)}>Delete</a>]}>\n                        <List.Item.Meta\n                          title={item.title}\n                          description={item.time}\n                        />\n                        \n                            <div >{item.content}</div>\n                       \n                        <Modal\n                          visible={visible}\n                          centered = {true}\n                          footer = {null}\n                          width={680}\n                          onCancel={this.handleCancel}\n                        >\n                            <div className=\"container\">\n                              <form onSubmit={this.handleSubmit} className=\"content\">\n                                <label>标题：\n                                  <input value={this.state.title} name=\"title\" onChange={this.handleChange}/>\n                                  </label>\n                                <div className=\"center\"> \n                                  <span>  内容:</span>\n                                <textarea value={this.state.content} name=\"content\" onChange={this.handleChange} rows='8' cols='46'/>\n                                \n                                </div>\n                                {/* <Checkbox checked={this.state.checked} onChange={this.handleChange}>\n                                  设置为已完成事项？\n                                </Checkbox> */}\n                                <div className=\"checked\">\n                                <input name=\"checked\" type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange} />\n                                  设置为已完成事项？\n                                </div> \n                                <Button type=\"primary\" htmlType=\"submit\" style={{ marginTop: 30 }} >\n                                  完成\n                                </Button>\n                            </form>\n                            </div>\n                        </Modal>\n                      </List.Item>\n                    )\n                  }else\n                  {\n                    return <span></span>\n                  }\n                }}\n              >\n                {this.state.loading && this.state.hasMore && (\n                  <div className=\"demo-loading-container\">\n                    <Spin />\n                  </div>\n                )}\n              </List>\n            </InfiniteScroll>\n          </div>\n        );\n      }\n} \n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}